#!/usr/bin/env python
import pygtk
pygtk.require('2.0')

import gtk
import gnomeapplet
import gobject

import sys
import codecs
import random

import aligned_window

class WSNameEntryWindow(aligned_window.AlignedWindow):
    def __init__(self, applet):
        aligned_window.AlignedWindow.__init__(self, applet)
	self.applet = applet
	frame = gtk.Frame()
	frame.set_shadow_type(gtk.SHADOW_OUT)
        self.entry = gtk.Entry()
	frame.add(self.entry)
	self.add(frame)
	
	self.set_default_size(0,0)
        self.entry.connect("activate", self._on_activate)
        self.entry.connect("key-release-event", self._on_key_release)

    def _on_activate(self, event):
        self.applet.toggle.set_active(False)
        self.applet.workspace.change_name(self.entry.get_text())

    def _on_key_release(self, widget, event):
        if event.keyval == gtk.keysyms.Escape:
            self.toggle.set_active(False)

class HindiScroller(gnomeapplet.Applet):
    _name_change_handler_id = None
    workspace = None
    
    def __init__(self):
        self.__gobject_init__()


    def init(self,app,iid):
        self.width = self.gconf_client.get_int(self.gconf_key_width) or 100
        if self.width < 30:
            self.width = 30

        self.allow_width_change = self.gconf_client.get_bool(self.gconf_key_width) or False
        self.toggle = gtk.ToggleButton()
	self.toggle.connect("toggled", self._on_toggled)
        self.toggle.connect("button-press-event", self._on_button_press)
	self.label = gtk.Label()
        if not self.allow_width_change:
            self.label.set_ellipsize(pango.ELLIPSIZE_END)
            self.label.set_size_request(self.width, -1)
	self.add(self.toggle)
	self.toggle.add(self.label)
	
	self.screen = wnck.screen_get_default()
	self.screen.connect("active_workspace_changed", self._on_workspace_changed)
	self.entry_window = WSNameEntryWindow(self)

	self._name_change_handler_id = None

	return True	    

    def _on_toggled(self, event):
        if self.toggle.get_active():
            self.entry_window.positionWindow()            
            self.entry_window.show_all()
            self.entry_window.present()
	    self.entry_window.entry.set_text(self.workspace.get_name())
            self.entry_window.entry.set_position(-1)            
            self.entry_window.entry.select_region(0, -1)
            gobject.timeout_add(0, self.entry_window.entry.grab_focus)
        else:
            self.entry_window.hide()

    def _on_button_press(self, toggle, event):
        if event.button != 1:
            toggle.stop_emission("button-press-event")

    def _on_workspace_changed(self, event, old_workspace):
        if self.toggle.get_active():
            self.toggle.set_active(False)
	if (self._name_change_handler_id):
	    self.workspace.disconnect(self._name_change_handler_id)
        self.workspace = really_get_active_workspace(self.screen)
	self._name_change_handler_id = self.workspace.connect("name-changed", self._on_workspace_name_changed)
        self.show_workspace_name()

    def _on_workspace_name_changed(self, event):
        self.show_workspace_name()

    def show_workspace_name(self):
        self.label.set_htext(self.workspace.get_name())
	self.show_all()

def really_get_active_workspace(screen):
    # This bit is needed because wnck is asynchronous.
    while gtk.events_pending():
        gtk.main_iteration() 
    return screen.get_active_workspace()

#Register the applet datatype
gobject.type_register(HindiScroller)

def hindi_scroller_factory(applet,iid):
    HindiScroller(applet,iid)
    return gtk.TRUE

#Very useful if I want to debug. To run in debug mode python hindiScroller.py -d
if len(sys.argv) == 2:
    if sys.argv[1] == "-d": #Debug mode
        main_window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        main_window.set_title("Python Applet")
        main_window.connect("destroy", gtk.main_quit)
        app = gnomeapplet.Applet()
        hindi_scroller_factory(app,None)
        app.reparent(main_window)
        main_window.show_all()
        gtk.main()
        sys.exit()

#If called via gnome panel, run it in the proper way
if __name__ == '__main__':
    gnomeapplet.bonobo_factory("OAFIID:GNOME_HindiScroller_Factory", HindiScroller.__gtype__, "hello", "0", hindi_scroller_factory)
